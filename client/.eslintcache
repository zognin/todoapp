[{"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js":"1","/Users/rgs/Documents/Learning/todoapp/client/src/index.js":"2","/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js":"3","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.js":"4","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.js":"5","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js":"6","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js":"7","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js":"8","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js":"9","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js":"10","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js":"11","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.js":"12","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.js":"13","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchOptions.js":"14","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/CheckboxTicked.js":"15","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/TrashInactive.js":"16","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeleteAlert.js":"17","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeletingAlert.js":"18","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/SearchIcon.js":"19","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/PriorityIcon.js":"20","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Viewbar.js":"21","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/ViewOptions.js":"22","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/AddButton.js":"23","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/CalendarView.js":"24","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchCalendar.js":"25","/Users/rgs/Documents/Learning/todoapp/client/src/components/Path.js":"26","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.tsx":"27","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.tsx":"28","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.tsx":"29","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.tsx":"30"},{"size":362,"mtime":1608600102011,"results":"31","hashOfConfig":"32"},{"size":558,"mtime":1608876030897,"results":"33","hashOfConfig":"34"},{"size":1156,"mtime":1609055857165,"results":"35","hashOfConfig":"34"},{"size":1145,"mtime":1610596341308,"results":"36","hashOfConfig":"32"},{"size":5503,"mtime":1610543988532,"results":"37","hashOfConfig":"32"},{"size":1203,"mtime":1610588854014,"results":"38","hashOfConfig":"32"},{"size":2240,"mtime":1610544003918,"results":"39","hashOfConfig":"32"},{"size":7827,"mtime":1610596217883,"results":"40","hashOfConfig":"32"},{"size":367,"mtime":1608794719407,"results":"41","hashOfConfig":"32"},{"size":5902,"mtime":1610595161541,"results":"42","hashOfConfig":"32"},{"size":2557,"mtime":1610266524418,"results":"43","hashOfConfig":"32"},{"size":224,"mtime":1608796232526,"results":"44","hashOfConfig":"32"},{"size":790,"mtime":1608968784110,"results":"45","hashOfConfig":"32"},{"size":135,"mtime":1610252690414,"results":"46","hashOfConfig":"32"},{"size":3147,"mtime":1610201807999,"results":"47","hashOfConfig":"34"},{"size":11413,"mtime":1610201808023,"results":"48","hashOfConfig":"32"},{"size":701,"mtime":1608956048440,"results":"49","hashOfConfig":"32"},{"size":229,"mtime":1608956448622,"results":"50","hashOfConfig":"32"},{"size":1003,"mtime":1608962581123,"results":"51","hashOfConfig":"32"},{"size":1003,"mtime":1608967370253,"results":"52","hashOfConfig":"32"},{"size":3629,"mtime":1610271299969,"results":"53","hashOfConfig":"34"},{"size":61,"mtime":1608969558339,"results":"54","hashOfConfig":"34"},{"size":2739,"mtime":1610545376861,"results":"55","hashOfConfig":"32"},{"size":1582,"mtime":1610335747864,"results":"56","hashOfConfig":"32"},{"size":3733,"mtime":1610335805336,"results":"57","hashOfConfig":"34"},{"size":289,"mtime":1610588091668,"results":"58","hashOfConfig":"32"},{"size":3975,"mtime":1610682319204,"results":"59","hashOfConfig":"32"},{"size":5199,"mtime":1610683701738,"results":"60","hashOfConfig":"32"},{"size":2055,"mtime":1610684341973,"results":"61","hashOfConfig":"32"},{"size":6412,"mtime":1610682466134,"results":"62","hashOfConfig":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"wjwkiq",{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"t0lzz6",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"65"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"65"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"131"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js",[],["139","140"],"/Users/rgs/Documents/Learning/todoapp/client/src/index.js",[],["141","142"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js",[],["143","144"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.js",["145"],"import React, { useState, useEffect } from 'react';\nimport Todos from './Todos';\nimport Header from './Header';\nimport CalendarView from './CalendarView';\nimport axios from 'axios';\nimport '../App.css';\nimport { productionBackendURL } from '../Path';\n\nconst Home = () => {\n  const [items, setItems] = useState([]);\n  const [itemsDisplayed, setItemsDisplayed] = useState([]);\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [isUpdate, setIsUpdate] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`${productionBackendURL}/api/v1/todos`, {\n        headers: headerData,\n      })\n      .then((res) => {\n        const item = res.data.data;\n        setItems(item);\n        setItemsDisplayed(item);\n      });\n  }, [isUpdate]);\n\n  return (\n    <div>\n      <Header />\n      <div className='view'>\n        <CalendarView items={items} />\n        <Todos\n          items={items}\n          setItems={setItems}\n          itemsDisplayed={itemsDisplayed}\n          setItemsDisplayed={setItemsDisplayed}\n          isUpdate={isUpdate}\n          setIsUpdate={setIsUpdate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.js",["146"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Search from './Search';\nimport '../App.css';\nimport CheckboxTicked from '../svg/CheckboxTicked';\nimport TrashInactive from '../svg/TrashInactive';\nimport DeleteAlert from './DeleteAlert';\nimport DeletingAlert from './DeletingAlert';\nimport PriorityIcon from '../svg/PriorityIcon';\nimport Viewbar from './Viewbar';\nimport { searchOptions } from './SearchOptions';\nimport SearchCalendar from './SearchCalendar';\n\nconst Todos = ({\n  items,\n  setItems,\n  itemsDisplayed,\n  setItemsDisplayed,\n  isUpdate,\n  setIsUpdate,\n}) => {\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [isDeleteAlert, setIsDeleteAlert] = useState(false);\n  const [isDeletingAlert, setIsDeletingAlert] = useState(false);\n  const [deleteData, setDeleteData] = useState({ id: '' });\n  const [selected, setSelected] = useState(searchOptions[0]);\n  const [isActiveSearchCalendar, setIsActiveSearchCalendar] = useState(false);\n\n  const toggleCheckbox = (e) => {\n    e.preventDefault();\n    const id = e.target.getAttribute('id');\n    const isCompleted = e.target.getAttribute('value');\n    const toggle_completed = isCompleted === 'false' ? true : false;\n    let item = { id: id, is_completed: toggle_completed };\n\n    axios\n      .put(\n        `https://cors-anywhere.herokuapp.com/https://zognin-todoapp-rails.herokuapp.com/api/v1/todos/${id}`,\n        { todo: item },\n        {\n          headers: headerData,\n        }\n      )\n      .then((resp) => {\n        setIsUpdate(!isUpdate);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    const id = e.target.getAttribute('id');\n    setDeleteData({ id: id });\n    setIsDeleteAlert(true);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    setIsDeleteAlert(false);\n    setIsDeletingAlert(true);\n    if (Array.isArray(deleteData.id)) {\n      axios\n        .post(\n          `https://cors-anywhere.herokuapp.com/https://zognin-todoapp-rails.herokuapp.com/api/v1/todos/destroy_multiple`,\n          deleteData,\n          {\n            headers: headerData,\n          }\n        )\n        .then((resp) => {\n          console.log(resp);\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    } else {\n      axios\n        .delete(\n          `https://cors-anywhere.herokuapp.com/https://zognin-todoapp-rails.herokuapp.com/api/v1/todos/${deleteData.id}`,\n          {\n            headers: headerData,\n            data: deleteData,\n          }\n        )\n        .then((resp) => {})\n        .catch((err) => console.log(err.response));\n    }\n    setTimeout(() => {\n      setIsDeletingAlert(false);\n      setDeleteData({ id: '' });\n      setIsUpdate(!isUpdate);\n    }, 1000);\n  };\n\n  return (\n    <div className='todos-container'>\n      <DeleteAlert\n        isDeleteAlert={isDeleteAlert}\n        setIsDeleteAlert={setIsDeleteAlert}\n        handleDelete={handleDelete}\n      />\n      <DeletingAlert isDeletingAlert={isDeletingAlert} />\n      <Search\n        items={items}\n        itemsDisplayed={itemsDisplayed}\n        setItemsDisplayed={setItemsDisplayed}\n        setIsActiveSearchCalendar={setIsActiveSearchCalendar}\n        selected={selected}\n        setSelected={setSelected}\n      />\n      <SearchCalendar\n        isActiveSearchCalendar={isActiveSearchCalendar}\n        setIsActiveSearchCalendar={setIsActiveSearchCalendar}\n        selected={selected}\n        setSelected={setSelected}\n        items={items}\n        setItemsDisplayed={setItemsDisplayed}\n      />\n      <Viewbar\n        items={items}\n        setItemsDisplayed={setItemsDisplayed}\n        setDeleteData={setDeleteData}\n        setIsDeleteAlert={setIsDeleteAlert}\n      />\n      <div className='todolist'>\n        <div className='todolist-container'>\n          {itemsDisplayed.map((todo) => (\n            <Link\n              to={{\n                pathname: `/todo/edit/${todo.attributes.id}`,\n                state: { id: todo.attributes.id },\n              }}\n              key={todo.id}\n              className='todolist-items'\n            >\n              <small className='todolist-date'>\n                {todo.attributes.start_time.slice(5, 10)} to{' '}\n                {todo.attributes.end_time.slice(5, 10)}\n              </small>\n              <div className='todolist-items-link'>{todo.attributes.task}</div>\n              <small className='todolist-items-category'>\n                {todo.attributes.category}\n              </small>\n              <div className='todolist-icons-container'>\n                {todo.attributes.is_priority && <PriorityIcon />}\n                {todo.attributes.is_completed ? (\n                  <CheckboxTicked\n                    toggleCheckbox={toggleCheckbox}\n                    id={todo.attributes.id}\n                  />\n                ) : (\n                  <div\n                    className='todolist-checkbox'\n                    onClick={toggleCheckbox}\n                    id={todo.id}\n                    value={todo.attributes.is_completed}\n                  ></div>\n                )}\n                <TrashInactive\n                  handleDeleteClick={handleDeleteClick}\n                  handleDelete={handleDelete}\n                  id={todo.attributes.id}\n                />\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Todos;\n",["147","148"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js",["149"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Back from './Back';\n\nconst Todo = (props) => {\n  const id = props.location.state.id;\n  sessionStorage.setItem('id', id);\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [item, setItem] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://zognin-todoapp-rails.herokuapp.com/api/v1/todos/${id}`,\n        {\n          headers: headerData,\n        }\n      )\n      .then((resp) => {\n        setItem(resp.data.data.attributes);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  let history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push({ pathname: `/todo/edit/${id}`, state: { id: id } });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Task: {item.task}</h1>\n        <br />\n        <p>Description: {item.description}</p>\n        <p>Category: {item.category}</p>\n        <div>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <div>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <Back />\n        <button className='btn btn-primary' type='submit'>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js",["150","151","152"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useHistory } from 'react-router-dom';\nimport SuccessAlert from './SuccessAlert';\nimport DeleteAlert from './DeleteAlert';\nimport DeletingAlert from './DeletingAlert';\nimport Back from './Back';\nimport { productionBackendURL } from '../Path';\n\nconst TodoEdit = (props) => {\n  let headerData = JSON.parse(sessionStorage.userData);\n  const initialDate = new Date();\n  const initialISODate = initialDate.toISOString();\n\n  const [item, setItem] = useState({\n    task: '',\n    description: '',\n    category: '',\n    start_time: initialISODate,\n    end_time: initialISODate,\n    is_completed: false,\n    is_priority: false,\n    id: '',\n  });\n\n  const formatLocalTime = (isoDateTime) => {\n    const datetime = new Date(isoDateTime);\n    const hours = datetime.getHours();\n    const minutes = datetime.getMinutes();\n    const hoursStr =\n      hours <= 9 ? '0' + hours.toString().concat() : hours.toString();\n    const minutesStr =\n      minutes <= 9 ? '0' + minutes.toString() : minutes.toString();\n    return hoursStr + ':' + minutesStr;\n  };\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [startTime, setStartTime] = useState('09:00');\n  const [endDate, setEndDate] = useState(new Date());\n  const [endTime, setEndTime] = useState('10:00');\n\n  useEffect(() => {\n    const startDateTime = formatDate(startDate, startTime);\n    const utcString = startDateTime.toISOString();\n    setItem({ ...item, start_time: utcString });\n  }, [startDate, startTime]);\n\n  useEffect(() => {\n    const endDateTime = formatDate(endDate, endTime);\n    const utcString = endDateTime.toISOString();\n    setItem({ ...item, end_time: utcString });\n  }, [endDate, endTime]);\n\n  const formatDate = (datetime, time) => {\n    const hour = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    datetime.setHours(hour);\n    datetime.setMinutes(minutes);\n    datetime.setSeconds(0);\n    return datetime;\n  };\n\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n  const [isDeleteAlert, setIsDeleteAlert] = useState(false);\n  const [isDeletingAlert, setIsDeletingAlert] = useState(false);\n  const id = props.location.state.id;\n\n  useEffect(() => {\n    axios\n      .get(`${productionBackendURL}/api/v1/todos/${id}`, {\n        headers: headerData,\n      })\n      .then((resp) => {\n        setItem(resp.data.data.attributes);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setItem({ ...item, [name]: value });\n  };\n\n  const handleCheckComplete = (e) => {\n    setItem({ ...item, is_completed: !item.is_completed });\n  };\n  const handleCheckPriority = (e) => {\n    setItem({ ...item, is_priority: !item.is_priority });\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    axios\n      .put(\n        `${productionBackendURL}/api/v1/todos/${id}`,\n        { todo: item },\n        {\n          headers: headerData,\n        }\n      )\n      .then((resp) => {\n        setIsSuccessAlert(true);\n        setTimeout(() => setIsSuccessAlert(false), 800);\n      });\n  };\n\n  let history = useHistory();\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    setIsDeleteAlert(true);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    setIsDeleteAlert(false);\n    setIsDeletingAlert(true);\n    axios\n      .delete(`${productionBackendURL}/api/v1/todos/${id}`, {\n        headers: headerData,\n        data: item,\n      })\n      .then((resp) => {});\n    setTimeout(() => {\n      setIsDeletingAlert(false);\n      history.push('/home');\n    }, 1000);\n  };\n\n  const handleStartEndDate = (value) => {\n    setStartDate(value);\n    setEndDate(value);\n  };\n\n  return (\n    <div className='todo-form'>\n      <SuccessAlert isSuccessAlert={isSuccessAlert} />\n      <DeletingAlert isDeletingAlert={isDeletingAlert} />\n      <DeleteAlert\n        isDeleteAlert={isDeleteAlert}\n        handleDelete={handleDelete}\n        setIsDeleteAlert={setIsDeleteAlert}\n      />\n      <form>\n        <h1>Edit</h1>\n        <div className='form-group'>\n          <label htmlFor='task' className='form-label'>\n            Task\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='task'\n            name='task'\n            value={item.task}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='description' className='form-label'>\n            Description\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='description'\n            name='description'\n            value={item.description}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='category' className='form-label'>\n            Category\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='category'\n            name='category'\n            value={item.category}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor='start-date' className='form-label'>\n            Start\n          </label>\n          <Calendar\n            onChange={(value) => {\n              handleStartEndDate(value);\n            }}\n            value={new Date(item.start_time)}\n            onClickDay={(startDate, e) => setStartDate(startDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setStartTime(e.target.value);\n            }}\n            value={formatLocalTime(item.start_time)}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor='end-date' className='form-label'>\n            End\n          </label>\n          <Calendar\n            onChange={setEndDate}\n            value={new Date(item.end_time)}\n            onClickDay={(endDate, e) => setEndDate(endDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setEndTime(e.target.value);\n            }}\n            value={formatLocalTime(item.end_time)}\n          />\n        </div>\n        <br />\n        <div onClick={handleCheckComplete}>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <div onClick={handleCheckPriority}>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary' onClick={handleSave}>\n          Save Changes\n        </button>\n        <br />\n        <Back />\n        <br />\n        <button\n          type='submit'\n          className='btn btn-dark'\n          onClick={handleDeleteClick}\n        >\n          Delete\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TodoEdit;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js",["153","154"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useHistory } from 'react-router-dom';\nimport SuccessAlert from './SuccessAlert';\nimport Back from './Back';\nimport { productionBackendURL } from '../Path';\n\nconst TodoCreate = () => {\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [item, setItem] = useState({\n    task: '',\n    description: '',\n    category: '',\n    start_time: '',\n    end_time: '',\n    is_completed: false,\n    is_priority: false,\n  });\n  const [startDate, setStartDate] = useState(new Date());\n  const [startTime, setStartTime] = useState('09:00');\n  const [endDate, setEndDate] = useState(new Date());\n  const [endTime, setEndTime] = useState('10:00');\n\n  useEffect(() => {\n    const startDateTime = formatDate(startDate, startTime);\n    const utcString = startDateTime.toISOString();\n    setItem({ ...item, start_time: utcString });\n  }, [startDate, startTime]);\n\n  useEffect(() => {\n    const endDateTime = formatDate(endDate, endTime);\n    const utcString = endDateTime.toISOString();\n    setItem({ ...item, end_time: utcString });\n  }, [endDate, endTime]);\n\n  const formatDate = (datetime, time) => {\n    const hour = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    datetime.setHours(hour);\n    datetime.setMinutes(minutes);\n    datetime.setSeconds(0);\n    return datetime;\n  };\n\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setItem({ ...item, [name]: value });\n  };\n\n  const handleCheckComplete = (e) => {\n    setItem({ ...item, is_completed: !item.is_completed });\n  };\n\n  const handleCheckPriority = (e) => {\n    setItem({ ...item, is_priority: !item.is_priority });\n  };\n\n  const handleStartEndDate = (value) => {\n    setStartDate(value);\n    setEndDate(value);\n  };\n\n  let history = useHistory();\n  const handleSave = (e) => {\n    e.preventDefault();\n    axios\n      .post(`${productionBackendURL}/api/v1/todos`, item, {\n        headers: headerData,\n      })\n      .then((resp) => {\n        setIsSuccessAlert(true);\n      });\n    setTimeout(() => {\n      setIsSuccessAlert(false);\n      history.push('/home');\n    }, 800);\n  };\n\n  return (\n    <div className='todo-form'>\n      <SuccessAlert isSuccessAlert={isSuccessAlert} />\n      <form>\n        <h1>New Task</h1>\n        <div className='form-group'>\n          <label htmlFor='task' className='form-label'>\n            Task\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='task'\n            name='task'\n            value={item.task}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='description' className='form-label'>\n            Description\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='description'\n            name='description'\n            value={item.description}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='category' className='form-label'>\n            Category\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='category'\n            name='category'\n            value={item.category}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor='start-date' className='form-label'>\n            Start\n          </label>\n          <Calendar\n            onChange={(value) => {\n              handleStartEndDate(value);\n            }}\n            value={startDate}\n            onClickDay={(startDate, e) => setStartDate(startDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setStartTime(e.target.value);\n            }}\n            value={startTime}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor='end-date' className='form-label'>\n            End\n          </label>\n          <Calendar\n            onChange={setEndDate}\n            value={endDate}\n            onClickDay={(endDate, e) => setEndDate(endDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setEndTime(e.target.value);\n            }}\n            value={endTime}\n          />\n        </div>\n        <br />\n        <div onClick={handleCheckComplete}>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <div onClick={handleCheckPriority}>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary' onClick={handleSave}>\n          Save Changes\n        </button>\n        <br />\n        <Back />\n      </form>\n    </div>\n  );\n};\n\nexport default TodoCreate;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js",["155","156"],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport SearchIcon from '../svg/SearchIcon';\nimport Dropdown from './Dropdown';\nimport { searchOptions } from './SearchOptions';\n\nconst Search = ({\n  items,\n  setItemsDisplayed,\n  setIsActiveSearchCalendar,\n  selected,\n  setSelected,\n}) => {\n  const [input, setInput] = useState('');\n  const [showCard, setShowCard] = useState(false);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInput(value);\n  };\n\n  function find(input) {\n    let regexInput = new RegExp(input, 'i');\n    if (selected === 'By Category') {\n      setItemsDisplayed(\n        items.filter((item) => regexInput.test(item.attributes.category))\n      );\n    } else {\n      setItemsDisplayed(\n        items.filter((item) => regexInput.test(item.attributes.task))\n      );\n    }\n  }\n\n  function reorder() {\n    if (selected === 'By Priority') {\n      const priorityItems = items.filter((item) => item.attributes.is_priority);\n      const nonPriorityItems = items.filter(\n        (item) => !item.attributes.is_priority\n      );\n      const reorderedItems = priorityItems.concat(nonPriorityItems);\n      setItemsDisplayed(reorderedItems);\n    } else if (selected === 'By Completed') {\n      const completedItems = items.filter(\n        (item) => item.attributes.is_completed\n      );\n      const nonCompletedItems = items.filter(\n        (item) => !item.attributes.is_completed\n      );\n      const reorderedItems = completedItems.concat(nonCompletedItems);\n      setItemsDisplayed(reorderedItems);\n    } else {\n      setItemsDisplayed(items);\n    }\n  }\n\n  useEffect(() => {\n    if (input) {\n      find(input);\n    } else {\n      setItemsDisplayed(items);\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (selected === 'By Start Date' || selected === 'By End Date') {\n      setIsActiveSearchCalendar(true);\n    } else {\n      reorder();\n    }\n  }, [selected]);\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    setSelected(e.target.innerHTML);\n    setShowCard(!showCard);\n  };\n\n  return (\n    <div>\n      <div className='search-bar'>\n        <input\n          id='search'\n          name='search'\n          placeholder='Search...'\n          value={input}\n          onChange={handleChange}\n        ></input>\n        <SearchIcon />\n        <Dropdown\n          handleSelect={handleSelect}\n          showCard={showCard}\n          setShowCard={setShowCard}\n          selected={selected}\n          searchOptions={searchOptions}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n",["157","158"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.js",["159"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchOptions.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/CheckboxTicked.js",["160","161","162","163"],"import React, { useState } from 'react';\n\nconst CheckboxTicked = ({ toggleCheckbox, id }) => {\n  const [isHover, setIsHover] = useState(false);\n  return (\n    <div\n      onClick={toggleCheckbox}\n      onMouseOver={() => setIsHover(true)}\n      onMouseOut={() => setIsHover(false)}\n    >\n      {isHover ? (\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width='81'\n          height='81'\n          viewBox='0 0 81 81'\n          id={id}\n        >\n          <g\n            id='Group_17'\n            data-name='Group 17'\n            transform='translate(-1211 -576)'\n          >\n            <g\n              id='Rectangle_9'\n              data-name='Rectangle 9'\n              transform='translate(1211 576)'\n              fill='#ceedff'\n              stroke='#0c129f'\n              strokeWidth='8'\n            >\n              <rect width='81' height='81' stroke='none' id={id} />\n              <rect x='4' y='4' width='73' height='73' fill='none' id={id} />\n            </g>\n            <line\n              id='Line_1'\n              data-name='Line 1'\n              x2='14'\n              y2='17'\n              transform='translate(1233.5 615.5)'\n              fill='none'\n              stroke='#0c129f'\n              strokeWidth='8'\n              id={id}\n            />\n            <line\n              id='Line_2'\n              data-name='Line 2'\n              x1='31'\n              y2='30'\n              transform='translate(1243.5 602.5)'\n              fill='none'\n              stroke='#0c129f'\n              strokeWidth='8'\n              id={id}\n            />\n          </g>\n        </svg>\n      ) : (\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width='81'\n          height='81'\n          viewBox='0 0 81 81'\n          preserveAspectRatio='xMaxYMin meet'\n          id={id}\n        >\n          <g id='Group_3' data-name='Group 3' transform='translate(-1207 -399)'>\n            <g id='Group_5' data-name='Group 5' transform='translate(-4 -177)'>\n              <g\n                id='Rectangle_9'\n                data-name='Rectangle 9'\n                transform='translate(1211 576)'\n                fill='#fff'\n                stroke='#0c129f'\n                strokeWidth='8'\n              >\n                <rect width='81' height='81' stroke='none' id={id} />\n                <rect x='4' y='4' width='73' height='73' fill='none' id={id} />\n              </g>\n              <line\n                id='Line_1'\n                data-name='Line 1'\n                x2='14'\n                y2='17'\n                transform='translate(1233.5 615.5)'\n                fill='none'\n                stroke='#0c129f'\n                strokeWidth='8'\n                id={id}\n              />\n              <line\n                id='Line_2'\n                data-name='Line 2'\n                x1='31'\n                y2='30'\n                transform='translate(1243.5 602.5)'\n                fill='none'\n                stroke='#0c129f'\n                strokeWidth='8'\n                id={id}\n              />\n            </g>\n          </g>\n        </svg>\n      )}\n    </div>\n  );\n};\n\nexport default CheckboxTicked;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/TrashInactive.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeleteAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeletingAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/SearchIcon.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/PriorityIcon.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Viewbar.js",["164","165","166"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Dropdown from './Dropdown';\nimport AddButton from '../svg/AddButton';\nimport DeleteAlert from './DeleteAlert';\n\nconst Viewbar = ({\n  items,\n  setItemsDisplayed,\n  setIsDeleteAlert,\n  setDeleteData,\n}) => {\n  let categoriesToAdd = [\n    'All',\n    'Priority',\n    'Completed',\n    'Incomplete',\n    'Start Date Order',\n    'End Date Order',\n  ];\n  const [viewOptions, setViewOptions] = useState(categoriesToAdd);\n  const [showCard, setShowCard] = useState(false);\n  const [selected, setSelected] = useState(viewOptions[0]);\n\n  useEffect(() => {\n    categoriesToAdd = [\n      'All',\n      'Priority',\n      'Completed',\n      'Incomplete',\n      'Start Date Order',\n      'End Date Order',\n    ];\n    for (let i = 0; i < items.length; i++) {\n      const category = items[i].attributes.category;\n      if (category && !categoriesToAdd.includes(category)) {\n        categoriesToAdd.push(category);\n      }\n    }\n    setViewOptions(categoriesToAdd);\n  }, [items]);\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    setSelected(e.target.innerHTML);\n    setShowCard(!showCard);\n  };\n\n  let deleteIds = [];\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    deleteIds = [];\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].attributes.is_completed) {\n        deleteIds.push(items[i].id);\n      }\n    }\n    setDeleteData({ id: deleteIds });\n    setIsDeleteAlert(true);\n  };\n\n  const sortStartDate = (a, b) =>\n    a.attributes.start_time < b.attributes.start_time\n      ? -1\n      : a.attributes.start_time > b.attributes.start_time\n      ? 1\n      : 0;\n  const sortEndDate = (a, b) =>\n    a.attributes.end_time < b.attributes.end_time\n      ? -1\n      : a.attributes.end_time > b.attributes.end_time\n      ? 1\n      : 0;\n\n  useEffect(() => {\n    if (selected === 'Priority') {\n      const priorityItems = items.filter((item) => item.attributes.is_priority);\n      setItemsDisplayed(priorityItems);\n    } else if (selected === 'Completed') {\n      const completedItems = items.filter(\n        (item) => item.attributes.is_completed\n      );\n      setItemsDisplayed(completedItems);\n    } else if (selected === 'Incomplete') {\n      const incompleteItems = items.filter(\n        (item) => !item.attributes.is_completed\n      );\n      setItemsDisplayed(incompleteItems);\n    } else if (selected === 'All') {\n      setItemsDisplayed(items);\n    } else if (selected === 'Start Date Order') {\n      const sorted = items.slice().sort(sortStartDate);\n      setItemsDisplayed(sorted);\n    } else if (selected === 'End Date Order') {\n      const sorted = items.slice().sort(sortEndDate);\n      setItemsDisplayed(sorted);\n    } else {\n      const displayItems = items.filter(\n        (item) => item.attributes.category === selected\n      );\n      setItemsDisplayed(displayItems);\n    }\n  }, [selected]);\n\n  return (\n    <div className='viewbar-container'>\n      <div className='viewbar'>\n        <div className='view-text'>View: </div>\n        <Dropdown\n          handleSelect={handleSelect}\n          showCard={showCard}\n          setShowCard={setShowCard}\n          selected={selected}\n          searchOptions={viewOptions}\n        />\n        <div className='todolist-icons-container'>\n          <Link to='/todo/new' className='nav-link active' aria-current='page'>\n            <AddButton />\n          </Link>\n          <button className='btn btn-info' onClick={handleDeleteClick}>\n            Delete all Completed\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Viewbar;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/ViewOptions.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/AddButton.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/CalendarView.js",["167"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchCalendar.js",[],["168","169"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/Path.js",["170"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.tsx",[],["171","172"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.tsx",["173","174"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport { productionBackendURL } from '../Path';\n\nconst ResetPassword = () => {\n  // Store user password and password_confirmation\n  const [user, setUser] = useState({\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    password: false,\n    password_confirmation: false,\n  });\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n  const [headerData, setHeaderData] = useState({});\n\n  // To set form input values\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  // To get access-token, client and uid from url\n  useEffect(() => {\n    const url = window.location.href;\n    const queryStringIndex = url.indexOf('?');\n    const queryString = url.substring(queryStringIndex + 1);\n    const queryStringParts = queryString.split('&');\n    var parameters: {\n      [key: string]: string;\n    } = {};\n    queryStringParts.forEach((part) => {\n      var equalsIndex = part.indexOf('=');\n      var key: string, value: string;\n      key = part.substring(0, equalsIndex);\n      value = part.substring(equalsIndex + 1);\n      key = decodeURIComponent(key);\n      value = decodeURIComponent(value);\n      parameters.key = value;\n    });\n    setHeaderData({\n      'access-token': parameters['access-token'],\n      client: parameters.client,\n      uid: parameters.uid,\n    });\n  }, []);\n\n  // To check if password and password_confirmation inputs are valid\n  useEffect(() => {\n    if (\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ password: true, password_confirmation: true });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, password: false });\n    } else {\n      setValid({ password: true, password_confirmation: false });\n    }\n  }, [user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleReset = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .put(`${productionBackendURL}/api/v1/auth/password`, null, {\n          params: user,\n          headers: headerData,\n        })\n        .then((resp) => {\n          history.push(`/login`);\n        })\n        .catch((err) => {\n          setError(true);\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <div className='user-auth'>\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n\n      <form onSubmit={handleReset}>\n        <h1>Reset Password</h1>\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Confirm\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.tsx",["175"],{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"178","replacedBy":"181"},{"ruleId":"176","replacedBy":"182"},{"ruleId":"178","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":25,"column":6,"nodeType":"186","endLine":25,"endColumn":16,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"176","replacedBy":"192"},{"ruleId":"178","replacedBy":"193"},{"ruleId":"184","severity":1,"message":"194","line":27,"column":6,"nodeType":"186","endLine":27,"endColumn":8,"suggestions":"195"},{"ruleId":"184","severity":1,"message":"196","line":51,"column":6,"nodeType":"186","endLine":51,"endColumn":28,"suggestions":"197"},{"ruleId":"184","severity":1,"message":"196","line":57,"column":6,"nodeType":"186","endLine":57,"endColumn":24,"suggestions":"198"},{"ruleId":"184","severity":1,"message":"194","line":81,"column":6,"nodeType":"186","endLine":81,"endColumn":8,"suggestions":"199"},{"ruleId":"184","severity":1,"message":"196","line":33,"column":6,"nodeType":"186","endLine":33,"endColumn":28,"suggestions":"200"},{"ruleId":"184","severity":1,"message":"196","line":39,"column":6,"nodeType":"186","endLine":39,"endColumn":24,"suggestions":"201"},{"ruleId":"184","severity":1,"message":"202","line":63,"column":6,"nodeType":"186","endLine":63,"endColumn":13,"suggestions":"203"},{"ruleId":"184","severity":1,"message":"204","line":71,"column":6,"nodeType":"186","endLine":71,"endColumn":16,"suggestions":"205"},{"ruleId":"176","replacedBy":"206"},{"ruleId":"178","replacedBy":"207"},{"ruleId":"188","severity":1,"message":"208","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":25},{"ruleId":"209","severity":1,"message":"210","line":44,"column":15,"nodeType":"211","endLine":44,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":55,"column":15,"nodeType":"211","endLine":55,"endColumn":22},{"ruleId":"209","severity":1,"message":"210","line":90,"column":17,"nodeType":"211","endLine":90,"endColumn":24},{"ruleId":"209","severity":1,"message":"210","line":101,"column":17,"nodeType":"211","endLine":101,"endColumn":24},{"ruleId":"188","severity":1,"message":"212","line":5,"column":8,"nodeType":"190","messageId":"191","endLine":5,"endColumn":19},{"ruleId":"184","severity":1,"message":"213","line":26,"column":23,"nodeType":"186","endLine":33,"endColumn":6},{"ruleId":"184","severity":1,"message":"214","line":104,"column":6,"nodeType":"186","endLine":104,"endColumn":16,"suggestions":"215"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"176","replacedBy":"216"},{"ruleId":"178","replacedBy":"217"},{"ruleId":"188","severity":1,"message":"218","line":1,"column":8,"nodeType":"190","messageId":"191","endLine":1,"endColumn":13},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"219","severity":1,"message":"220","line":43,"column":32,"nodeType":"190","messageId":"191","endLine":43,"endColumn":35},{"ruleId":"184","severity":1,"message":"221","line":66,"column":6,"nodeType":"186","endLine":66,"endColumn":49,"suggestions":"222"},{"ruleId":"184","severity":1,"message":"223","line":50,"column":6,"nodeType":"186","endLine":50,"endColumn":61,"suggestions":"224"},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],["225"],["226"],["225"],["226"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'headerData'. Either include it or remove the dependency array.","ArrayExpression",["227"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar",["225"],["226"],"React Hook useEffect has missing dependencies: 'headerData' and 'id'. Either include them or remove the dependency array.",["228"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array. You can also do a functional update 'setItem(i => ...)' if you only need 'item' in the 'setItem' call.",["229"],["230"],["231"],["232"],["233"],"React Hook useEffect has missing dependencies: 'find', 'items', and 'setItemsDisplayed'. Either include them or remove the dependency array. If 'setItemsDisplayed' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["234"],"React Hook useEffect has missing dependencies: 'reorder' and 'setIsActiveSearchCalendar'. Either include them or remove the dependency array. If 'setIsActiveSearchCalendar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["235"],["225"],["226"],"'useState' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'DeleteAlert' is defined but never used.","Assignments to the 'categoriesToAdd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'items' and 'setItemsDisplayed'. Either include them or remove the dependency array. If 'setItemsDisplayed' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["236"],["225"],["226"],"'React' is defined but never used.","@typescript-eslint/no-unused-vars","'key' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'valid'. Either include it or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["237"],"React Hook useEffect has missing dependencies: 'pattern' and 'valid'. Either include them or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"241","fix":"247"},{"desc":"243","fix":"248"},{"desc":"245","fix":"249"},{"desc":"250","fix":"251"},{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},"Update the dependencies array to be: [headerData, isUpdate]",{"range":"260","text":"261"},"Update the dependencies array to be: [headerData, id]",{"range":"262","text":"263"},"Update the dependencies array to be: [item, startDate, startTime]",{"range":"264","text":"265"},"Update the dependencies array to be: [endDate, endTime, item]",{"range":"266","text":"267"},{"range":"268","text":"263"},{"range":"269","text":"265"},{"range":"270","text":"267"},"Update the dependencies array to be: [find, input, items, setItemsDisplayed]",{"range":"271","text":"272"},"Update the dependencies array to be: [reorder, selected, setIsActiveSearchCalendar]",{"range":"273","text":"274"},"Update the dependencies array to be: [items, selected, setItemsDisplayed]",{"range":"275","text":"276"},"Update the dependencies array to be: [user.password, user.password_confirmation, valid]",{"range":"277","text":"278"},"Update the dependencies array to be: [pattern, user.email, user.password, user.password_confirmation, valid]",{"range":"279","text":"280"},[735,745],"[headerData, isUpdate]",[824,826],"[headerData, id]",[1750,1772],"[item, startDate, startTime]",[1951,1969],"[endDate, endTime, item]",[2645,2647],[1137,1159],[1338,1356],[1726,1733],"[find, input, items, setItemsDisplayed]",[1907,1917],"[reorder, selected, setIsActiveSearchCalendar]",[2911,2921],"[items, selected, setItemsDisplayed]",[2086,2129],"[user.password, user.password_confirmation, valid]",[1846,1901],"[pattern, user.email, user.password, user.password_confirmation, valid]"]