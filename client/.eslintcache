[{"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js":"1","/Users/rgs/Documents/Learning/todoapp/client/src/index.js":"2","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.tsx":"3","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.tsx":"4","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.tsx":"5","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.tsx":"6","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.tsx":"7","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.tsx":"8","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.tsx":"9","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.tsx":"10","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.tsx":"11","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeleteAlert.tsx":"12","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.tsx":"13","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchCalendar.tsx":"14","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/PriorityIcon.tsx":"15","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/SearchIcon.tsx":"16","/Users/rgs/Documents/Learning/todoapp/client/src/components/App.tsx":"17","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeletingAlert.tsx":"18","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/AddButton.tsx":"19","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/Trash.tsx":"20","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.tsx":"21","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/CheckboxTicked.tsx":"22","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.tsx":"23"},{"size":362,"mtime":1608600102011,"results":"24","hashOfConfig":"25"},{"size":558,"mtime":1608876030897,"results":"26","hashOfConfig":"25"},{"size":3975,"mtime":1610846091381,"results":"27","hashOfConfig":"25"},{"size":5200,"mtime":1610846091381,"results":"28","hashOfConfig":"25"},{"size":2055,"mtime":1610846091380,"results":"29","hashOfConfig":"25"},{"size":6412,"mtime":1610846091382,"results":"30","hashOfConfig":"25"},{"size":1482,"mtime":1610887100022,"results":"31","hashOfConfig":"25"},{"size":8262,"mtime":1610862717001,"results":"32","hashOfConfig":"25"},{"size":6752,"mtime":1610889633465,"results":"33","hashOfConfig":"25"},{"size":1260,"mtime":1610860231139,"results":"34","hashOfConfig":"25"},{"size":289,"mtime":1610860969676,"results":"35","hashOfConfig":"25"},{"size":917,"mtime":1610861055583,"results":"36","hashOfConfig":"25"},{"size":3420,"mtime":1610860205486,"results":"37","hashOfConfig":"25"},{"size":4534,"mtime":1610859821476,"results":"38","hashOfConfig":"25"},{"size":1003,"mtime":1610862079666,"results":"39","hashOfConfig":"25"},{"size":1003,"mtime":1610862087545,"results":"40","hashOfConfig":"25"},{"size":1030,"mtime":1610861744062,"results":"41","hashOfConfig":"25"},{"size":295,"mtime":1610860974259,"results":"42","hashOfConfig":"25"},{"size":2739,"mtime":1610861820639,"results":"43","hashOfConfig":"25"},{"size":11545,"mtime":1610862163263,"results":"44","hashOfConfig":"25"},{"size":1029,"mtime":1610860899339,"results":"45","hashOfConfig":"25"},{"size":4134,"mtime":1610891125182,"results":"46","hashOfConfig":"25"},{"size":6212,"mtime":1610888706646,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"wjwkiq",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js",[],["100","101"],"/Users/rgs/Documents/Learning/todoapp/client/src/index.js",[],["102","103"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.tsx",[],["104","105"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.tsx",["106"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport { productionBackendURL } from '../Path';\n\nconst ResetPassword = () => {\n  // Store user password and password_confirmation\n  const [user, setUser] = useState({\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    password: false,\n    password_confirmation: false,\n  });\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n  const [headerData, setHeaderData] = useState({});\n\n  // To set form input values\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  // To get access-token, client and uid from url\n  useEffect(() => {\n    const url = window.location.href;\n    const queryStringIndex = url.indexOf('?');\n    const queryString = url.substring(queryStringIndex + 1);\n    const queryStringParts = queryString.split('&');\n    var parameters: {\n      [key: string]: string;\n    } = {};\n    queryStringParts.forEach((part) => {\n      var equalsIndex = part.indexOf('=');\n      var key: string, value: string;\n      key = part.substring(0, equalsIndex);\n      value = part.substring(equalsIndex + 1);\n      key = decodeURIComponent(key);\n      value = decodeURIComponent(value);\n      parameters[key] = value;\n    });\n    setHeaderData({\n      'access-token': parameters['access-token'],\n      client: parameters.client,\n      uid: parameters.uid,\n    });\n  }, []);\n\n  // To check if password and password_confirmation inputs are valid\n  useEffect(() => {\n    if (\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ password: true, password_confirmation: true });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, password: false });\n    } else {\n      setValid({ password: true, password_confirmation: false });\n    }\n  }, [user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleReset = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .put(`${productionBackendURL}/api/v1/auth/password`, null, {\n          params: user,\n          headers: headerData,\n        })\n        .then((resp) => {\n          history.push(`/login`);\n        })\n        .catch((err) => {\n          setError(true);\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <div className='user-auth'>\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n\n      <form onSubmit={handleReset}>\n        <h1>Reset Password</h1>\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Confirm\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.tsx",[],["107","108"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.tsx",["109"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom';\nimport { productionBackendURL } from '../Path';\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    email: false,\n    password: false,\n    password_confirmation: false,\n  });\n  const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n\n  //To set form input values\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  //Regex to check if email format is valid\n  let pattern = new RegExp(\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n  );\n\n  //Check if email, password and confirm password inputs are valid\n  useEffect(() => {\n    if (\n      pattern.test(user.email) &&\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ email: true, password: true, password_confirmation: true });\n    } else if (!pattern.test(user.email)) {\n      setValid({ ...valid, email: false });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, email: true, password: false });\n    } else {\n      setValid({ email: true, password: true, password_confirmation: false });\n    }\n  }, [user.email, user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleSignup = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (valid.email && valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .post(`${productionBackendURL}/api/v1/auth`, user)\n        .then((resp) => {\n          setIsSuccessAlert(true);\n          setTimeout(() => {\n            setIsSuccessAlert(false);\n            history.push('/login');\n          }, 800);\n        })\n        .catch((err) => {\n          if (err.response.status && err.response.status === 422) {\n            setUserAlreadyExists(true);\n          } else {\n            setError(true);\n          }\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <div className='user-auth'>\n      {isSuccessAlert && (\n        <div className='alert alert-success'>\n          Account Created! Redirecting to Login...\n        </div>\n      )}\n      {userAlreadyExists && (\n        <div\n          className='alert alert-info alert-dismissible fade show'\n          role='alert'\n        >\n          User already exists\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setUserAlreadyExists(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      <form onSubmit={handleSignup}>\n        <h1>Sign Up</h1>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='email' className='form-label'>\n            Email\n          </label>\n          <input\n            type='email'\n            className='form-control'\n            id='email'\n            name='email'\n            value={user.email}\n            onChange={handleChange}\n          ></input>\n          {!valid.email && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please enter a valid email\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary'>\n          Sign up\n        </button>\n        <br />\n        <Link to='/login'>Or log in if you have an account</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.tsx",["110"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.tsx",["111","112","113"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeleteAlert.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.tsx",["114","115"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchCalendar.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/PriorityIcon.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/SearchIcon.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/App.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeletingAlert.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/AddButton.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/Trash.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/CheckboxTicked.tsx",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.tsx",["116","117"],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":66,"column":6,"nodeType":"126","endLine":66,"endColumn":49,"suggestions":"127"},{"ruleId":"118","replacedBy":"128"},{"ruleId":"120","replacedBy":"129"},{"ruleId":"124","severity":1,"message":"130","line":50,"column":6,"nodeType":"126","endLine":50,"endColumn":61,"suggestions":"131"},{"ruleId":"124","severity":1,"message":"132","line":44,"column":6,"nodeType":"126","endLine":44,"endColumn":16,"suggestions":"133"},{"ruleId":"124","severity":1,"message":"134","line":53,"column":6,"nodeType":"126","endLine":53,"endColumn":28,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"134","line":61,"column":6,"nodeType":"126","endLine":61,"endColumn":24,"suggestions":"136"},{"ruleId":"124","severity":1,"message":"137","line":87,"column":6,"nodeType":"126","endLine":87,"endColumn":8,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":96,"column":6,"nodeType":"126","endLine":96,"endColumn":13,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":104,"column":6,"nodeType":"126","endLine":104,"endColumn":16,"suggestions":"142"},{"ruleId":"124","severity":1,"message":"134","line":35,"column":6,"nodeType":"126","endLine":35,"endColumn":28,"suggestions":"143"},{"ruleId":"124","severity":1,"message":"134","line":43,"column":6,"nodeType":"126","endLine":43,"endColumn":24,"suggestions":"144"},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'valid'. Either include it or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.","ArrayExpression",["147"],["145"],["146"],"React Hook useEffect has missing dependencies: 'pattern' and 'valid'. Either include them or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["148"],"React Hook useEffect has a missing dependency: 'headerData'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array. You can also do a functional update 'setItem(i => ...)' if you only need 'item' in the 'setItem' call.",["150"],["151"],"React Hook useEffect has missing dependencies: 'headerData' and 'id'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has missing dependencies: 'find', 'items', and 'setItemsDisplayed'. Either include them or remove the dependency array. If 'setItemsDisplayed' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["153"],"React Hook useEffect has missing dependencies: 'reorder' and 'setIsActiveSearchCalendar'. Either include them or remove the dependency array. If 'setIsActiveSearchCalendar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["154"],["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"163","fix":"173"},{"desc":"165","fix":"174"},"Update the dependencies array to be: [user.password, user.password_confirmation, valid]",{"range":"175","text":"176"},"Update the dependencies array to be: [pattern, user.email, user.password, user.password_confirmation, valid]",{"range":"177","text":"178"},"Update the dependencies array to be: [headerData, isUpdate]",{"range":"179","text":"180"},"Update the dependencies array to be: [item, startDate, startTime]",{"range":"181","text":"182"},"Update the dependencies array to be: [endDate, endTime, item]",{"range":"183","text":"184"},"Update the dependencies array to be: [headerData, id]",{"range":"185","text":"186"},"Update the dependencies array to be: [find, input, items, setItemsDisplayed]",{"range":"187","text":"188"},"Update the dependencies array to be: [reorder, selected, setIsActiveSearchCalendar]",{"range":"189","text":"190"},{"range":"191","text":"182"},{"range":"192","text":"184"},[2087,2130],"[user.password, user.password_confirmation, valid]",[1846,1901],"[pattern, user.email, user.password, user.password_confirmation, valid]",[1102,1112],"[headerData, isUpdate]",[1844,1866],"[item, startDate, startTime]",[2094,2112],"[endDate, endTime, item]",[2875,2877],"[headerData, id]",[2523,2530],"[find, input, items, setItemsDisplayed]",[2704,2714],"[reorder, selected, setIsActiveSearchCalendar]",[1218,1240],[1468,1486]]