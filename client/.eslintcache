[{"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js":"1","/Users/rgs/Documents/Learning/todoapp/client/src/index.js":"2","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.js":"3","/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js":"4","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.js":"5","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.js":"6","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.js":"7","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js":"8","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.js":"9","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.js":"10","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js":"11","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js":"12","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js":"13","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js":"14","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js":"15","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.js":"16","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.js":"17","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchOptions.js":"18"},{"size":362,"mtime":1608600102011,"results":"19","hashOfConfig":"20"},{"size":558,"mtime":1608876030897,"results":"21","hashOfConfig":"20"},{"size":2239,"mtime":1608798390596,"results":"22","hashOfConfig":"20"},{"size":1109,"mtime":1608876323719,"results":"23","hashOfConfig":"20"},{"size":5809,"mtime":1608706867184,"results":"24","hashOfConfig":"20"},{"size":204,"mtime":1608798530722,"results":"25","hashOfConfig":"20"},{"size":1407,"mtime":1608903256389,"results":"26","hashOfConfig":"20"},{"size":1597,"mtime":1608878555682,"results":"27","hashOfConfig":"20"},{"size":1434,"mtime":1608724382512,"results":"28","hashOfConfig":"20"},{"size":4853,"mtime":1608726246187,"results":"29","hashOfConfig":"20"},{"size":2171,"mtime":1608800734361,"results":"30","hashOfConfig":"20"},{"size":5655,"mtime":1608903557946,"results":"31","hashOfConfig":"20"},{"size":367,"mtime":1608794719407,"results":"32","hashOfConfig":"20"},{"size":3824,"mtime":1608800726191,"results":"33","hashOfConfig":"20"},{"size":2461,"mtime":1608902800421,"results":"34","hashOfConfig":"20"},{"size":224,"mtime":1608796232526,"results":"35","hashOfConfig":"20"},{"size":815,"mtime":1608892572903,"results":"36","hashOfConfig":"20"},{"size":141,"mtime":1608887821339,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"t0lzz6",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"45"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"45"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js",[],["82","83"],"/Users/rgs/Documents/Learning/todoapp/client/src/index.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.js",[],["84","85"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js",[],["86","87"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.js",["88"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom';\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    email: false,\n    password: false,\n    password_confirmation: false,\n  });\n  const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  let pattern = new RegExp(\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n  );\n\n  useEffect(() => {\n    if (\n      pattern.test(user.email) &&\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ email: true, password: true, password_confirmation: true });\n    } else if (!pattern.test(user.email)) {\n      setValid({ ...valid, email: false });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, email: true, password: false });\n    } else {\n      setValid({ email: true, password: true, password_confirmation: false });\n    }\n  }, [user.email, user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    if (valid.email && valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .post('http://localhost:3000/api/v1/auth', user)\n        .then((resp) => {\n          history.push(`/login`);\n        })\n        .catch((err) => {\n          console.log(err.response);\n          if (err.response.status === 422) {\n            setUserAlreadyExists(true);\n          } else {\n            setError(true);\n          }\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <section>\n      {userAlreadyExists && (\n        <div\n          className='alert alert-info alert-dismissible fade show'\n          role='alert'\n        >\n          User already exists\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setUserAlreadyExists(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      <h1>Sign Up</h1>\n      <br />\n      <form onSubmit={handleSignup}>\n        <div className='form-group'>\n          <label htmlFor='email' className='form-label'>\n            Email\n          </label>\n          <input\n            type='email'\n            className='form-control'\n            id='email'\n            name='email'\n            value={user.email}\n            onChange={handleChange}\n          ></input>\n          {!valid.email && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please enter a valid email\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary'>\n          Sign up\n        </button>\n      </form>\n      <br />\n      <Link to='/login'>Or log in if you have an account</Link>\n    </section>\n  );\n};\n\nexport default Signup;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.js",["89"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.js",["90"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [user, setUser] = useState({\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    password: false,\n    password_confirmation: false,\n  });\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n  const [headerData, setHeaderData] = useState({});\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  useEffect(() => {\n    const url = window.location.href;\n    const queryStringIndex = url.indexOf('?');\n    const queryString = url.substring(queryStringIndex + 1);\n    const queryStringParts = queryString.split('&');\n    var parameters = {};\n    queryStringParts.forEach((part) => {\n      var equalsIndex = part.indexOf('=');\n      var key, value;\n      key = part.substring(0, equalsIndex);\n      value = part.substring(equalsIndex + 1);\n      key = decodeURIComponent(key);\n      value = decodeURIComponent(value);\n      parameters[key] = value;\n    });\n    setHeaderData({\n      'access-token': parameters['access-token'],\n      client: parameters.client,\n      uid: parameters.uid,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ password: true, password_confirmation: true });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, email: true, password: false });\n    } else {\n      setValid({ email: true, password: true, password_confirmation: false });\n    }\n  }, [user.email, user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    if (valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .put('http://localhost:3000/api/v1/auth/password', null, {\n          params: user,\n          headers: headerData,\n        })\n        .then((resp) => {\n          history.push(`/login`);\n        })\n        .catch((err) => {\n          console.log(err.response);\n          setError(true);\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <div>\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      <h1>Reset Password</h1>\n      <form onSubmit={handleReset}>\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Confirm\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js",["91"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './Todo.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Back from './Back';\n\nconst Todo = (props) => {\n  const slug = props.location.state.slug;\n  sessionStorage.setItem('slug', slug);\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [item, setItem] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:3000/api/v1/todos/${slug}`, {\n        headers: headerData,\n      })\n      .then((resp) => {\n        setItem(resp.data.data.attributes);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  let history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push({ pathname: `/todo/edit/${slug}`, state: { slug: slug } });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Task: {item.task}</h1>\n        <br />\n        <p>Description: {item.description}</p>\n        <p>Category: {item.category}</p>\n        <div>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <div>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <Back />\n        <button className='btn btn-primary' type='submit'>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js",["92"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js",["93"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Todo.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport { useHistory } from 'react-router-dom';\nimport SuccessAlert from './SuccessAlert';\nimport Back from './Back';\n\nconst TodoCreate = () => {\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [item, setItem] = useState({\n    task: '',\n    description: '',\n    category: '',\n    is_completed: false,\n    is_priority: false,\n  });\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setItem({ ...item, [name]: value });\n  };\n  const handleCheckComplete = (e) => {\n    setItem({ ...item, is_completed: !item.is_completed });\n  };\n  const handleCheckPriority = (e) => {\n    setItem({ ...item, is_priority: !item.is_priority });\n  };\n  let history = useHistory();\n  const handleSave = (e) => {\n    e.preventDefault();\n    axios\n      .post(`http://localhost:3000/api/v1/todos`, item, {\n        headers: headerData,\n      })\n      .then((resp) => {\n        setIsSuccessAlert(true);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setTimeout(() => {\n      setIsSuccessAlert(false);\n      history.push('/home');\n    }, 800);\n  };\n\n  return (\n    <section>\n      <SuccessAlert isSuccessAlert={isSuccessAlert} />\n      <h1>New Task</h1>\n      <br />\n      <form>\n        <div className='form-group'>\n          <label htmlFor='task' className='form-label'>\n            Task\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='task'\n            name='task'\n            value={item.task}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='description' className='form-label'>\n            Description\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='description'\n            name='description'\n            value={item.description}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='category' className='form-label'>\n            Category\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='category'\n            name='category'\n            value={item.category}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <br />\n        <div onClick={handleCheckComplete}>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <div onClick={handleCheckPriority}>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <Back />\n        <button type='submit' className='btn btn-primary' onClick={handleSave}>\n          Save Changes\n        </button>\n      </form>\n    </section>\n  );\n};\n\nexport default TodoCreate;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js",["94","95"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.js",["96"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchOptions.js",["97","98"],"import React, { useState } from 'react';\n\nexport const searchOptions = [\n  'By Category',\n  'By Task',\n  'By Priority',\n  'By Completed',\n];\n",{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"99","replacedBy":"105"},{"ruleId":"101","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":45,"column":6,"nodeType":"109","endLine":45,"endColumn":61,"suggestions":"110"},{"ruleId":"107","severity":1,"message":"111","line":25,"column":6,"nodeType":"109","endLine":25,"endColumn":8,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":57,"column":6,"nodeType":"109","endLine":57,"endColumn":61,"suggestions":"114"},{"ruleId":"107","severity":1,"message":"115","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":8,"suggestions":"116"},{"ruleId":"107","severity":1,"message":"115","line":37,"column":6,"nodeType":"109","endLine":37,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":27,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"122","line":58,"column":6,"nodeType":"109","endLine":58,"endColumn":13,"suggestions":"123"},{"ruleId":"107","severity":1,"message":"124","line":62,"column":6,"nodeType":"109","endLine":62,"endColumn":16,"suggestions":"125"},{"ruleId":"118","severity":1,"message":"126","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},{"ruleId":"118","severity":1,"message":"127","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":13},{"ruleId":"118","severity":1,"message":"126","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":25},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],["128"],["129"],["128"],["129"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pattern' and 'valid'. Either include them or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.","ArrayExpression",["130"],"React Hook useEffect has a missing dependency: 'headerData'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'valid'. Either include it or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["132"],"React Hook useEffect has missing dependencies: 'headerData' and 'slug'. Either include them or remove the dependency array.",["133"],["134"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'find', 'items', and 'setItemsDisplayed'. Either include them or remove the dependency array. If 'setItemsDisplayed' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["135"],"React Hook useEffect has a missing dependency: 'reorder'. Either include it or remove the dependency array.",["136"],"'useState' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"143","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [pattern, user.email, user.password, user.password_confirmation, valid]",{"range":"150","text":"151"},"Update the dependencies array to be: [headerData]",{"range":"152","text":"153"},"Update the dependencies array to be: [user.email, user.password, user.password_confirmation, valid]",{"range":"154","text":"155"},"Update the dependencies array to be: [headerData, slug]",{"range":"156","text":"157"},{"range":"158","text":"157"},"Update the dependencies array to be: [find, input, items, setItemsDisplayed]",{"range":"159","text":"160"},"Update the dependencies array to be: [reorder, selected]",{"range":"161","text":"162"},[1558,1613],"[pattern, user.email, user.password, user.password_confirmation, valid]",[663,665],"[headerData]",[1752,1807],"[user.email, user.password, user.password_confirmation, valid]",[749,751],"[headerData, slug]",[1134,1136],[1749,1756],"[find, input, items, setItemsDisplayed]",[1800,1810],"[reorder, selected]"]