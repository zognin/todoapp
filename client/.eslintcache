[{"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js":"1","/Users/rgs/Documents/Learning/todoapp/client/src/index.js":"2","/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js":"3","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js":"4","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js":"5","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js":"6","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js":"7","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js":"8","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js":"9","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.js":"10","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.js":"11","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchOptions.js":"12","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/CheckboxTicked.js":"13","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/TrashInactive.js":"14","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeleteAlert.js":"15","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeletingAlert.js":"16","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/SearchIcon.js":"17","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/PriorityIcon.js":"18","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Viewbar.js":"19","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/ViewOptions.js":"20","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/AddButton.js":"21","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/CalendarView.js":"22","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchCalendar.js":"23","/Users/rgs/Documents/Learning/todoapp/client/src/components/Path.js":"24","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.tsx":"25","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.tsx":"26","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.tsx":"27","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.tsx":"28","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.tsx":"29"},{"size":362,"mtime":1608600102011,"results":"30","hashOfConfig":"31"},{"size":558,"mtime":1608876030897,"results":"32","hashOfConfig":"33"},{"size":1156,"mtime":1609055857165,"results":"34","hashOfConfig":"33"},{"size":1203,"mtime":1610846091375,"results":"35","hashOfConfig":"31"},{"size":2240,"mtime":1610846091377,"results":"36","hashOfConfig":"31"},{"size":7827,"mtime":1610846091378,"results":"37","hashOfConfig":"31"},{"size":367,"mtime":1608794719407,"results":"38","hashOfConfig":"31"},{"size":5902,"mtime":1610846091378,"results":"39","hashOfConfig":"31"},{"size":2557,"mtime":1610266524418,"results":"40","hashOfConfig":"31"},{"size":224,"mtime":1608796232526,"results":"41","hashOfConfig":"31"},{"size":776,"mtime":1610850313320,"results":"42","hashOfConfig":"31"},{"size":135,"mtime":1610252690414,"results":"43","hashOfConfig":"31"},{"size":3103,"mtime":1610850240883,"results":"44","hashOfConfig":"31"},{"size":11413,"mtime":1610201808023,"results":"45","hashOfConfig":"31"},{"size":701,"mtime":1608956048440,"results":"46","hashOfConfig":"31"},{"size":229,"mtime":1608956448622,"results":"47","hashOfConfig":"31"},{"size":1003,"mtime":1608962581123,"results":"48","hashOfConfig":"31"},{"size":1003,"mtime":1608967370253,"results":"49","hashOfConfig":"31"},{"size":3629,"mtime":1610271299969,"results":"50","hashOfConfig":"31"},{"size":61,"mtime":1608969558339,"results":"51","hashOfConfig":"33"},{"size":2739,"mtime":1610545376861,"results":"52","hashOfConfig":"31"},{"size":1582,"mtime":1610335747864,"results":"53","hashOfConfig":"31"},{"size":3733,"mtime":1610335805336,"results":"54","hashOfConfig":"31"},{"size":261,"mtime":1610846091374,"results":"55","hashOfConfig":"31"},{"size":3975,"mtime":1610846091381,"results":"56","hashOfConfig":"31"},{"size":5200,"mtime":1610846091381,"results":"57","hashOfConfig":"31"},{"size":2055,"mtime":1610846091380,"results":"58","hashOfConfig":"31"},{"size":6412,"mtime":1610846091382,"results":"59","hashOfConfig":"31"},{"size":1509,"mtime":1610854144425,"results":"60","hashOfConfig":"31"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"wjwkiq",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"t0lzz6",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"63"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"63"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"63"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"63"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"86"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"128"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"128"},"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js",[],["135","136"],"/Users/rgs/Documents/Learning/todoapp/client/src/index.js",[],["137","138"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js",[],["139","140"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js",["141"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport '../App.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Back from './Back';\n\nconst Todo = (props) => {\n  const id = props.location.state.id;\n  sessionStorage.setItem('id', id);\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [item, setItem] = useState({});\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://zognin-todoapp-rails.herokuapp.com/api/v1/todos/${id}`,\n        {\n          headers: headerData,\n        }\n      )\n      .then((resp) => {\n        setItem(resp.data.data.attributes);\n      })\n      .catch((err) => console.log(err));\n  }, []);\n\n  let history = useHistory();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    history.push({ pathname: `/todo/edit/${id}`, state: { id: id } });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <h1>Task: {item.task}</h1>\n        <br />\n        <p>Description: {item.description}</p>\n        <p>Category: {item.category}</p>\n        <div>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <div>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <Back />\n        <button className='btn btn-primary' type='submit'>\n          Edit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Todo;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js",["142","143","144"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useHistory } from 'react-router-dom';\nimport SuccessAlert from './SuccessAlert';\nimport DeleteAlert from './DeleteAlert';\nimport DeletingAlert from './DeletingAlert';\nimport Back from './Back';\nimport { productionBackendURL } from '../Path';\n\nconst TodoEdit = (props) => {\n  let headerData = JSON.parse(sessionStorage.userData);\n  const initialDate = new Date();\n  const initialISODate = initialDate.toISOString();\n\n  const [item, setItem] = useState({\n    task: '',\n    description: '',\n    category: '',\n    start_time: initialISODate,\n    end_time: initialISODate,\n    is_completed: false,\n    is_priority: false,\n    id: '',\n  });\n\n  const formatLocalTime = (isoDateTime) => {\n    const datetime = new Date(isoDateTime);\n    const hours = datetime.getHours();\n    const minutes = datetime.getMinutes();\n    const hoursStr =\n      hours <= 9 ? '0' + hours.toString().concat() : hours.toString();\n    const minutesStr =\n      minutes <= 9 ? '0' + minutes.toString() : minutes.toString();\n    return hoursStr + ':' + minutesStr;\n  };\n\n  const [startDate, setStartDate] = useState(new Date());\n  const [startTime, setStartTime] = useState('09:00');\n  const [endDate, setEndDate] = useState(new Date());\n  const [endTime, setEndTime] = useState('10:00');\n\n  useEffect(() => {\n    const startDateTime = formatDate(startDate, startTime);\n    const utcString = startDateTime.toISOString();\n    setItem({ ...item, start_time: utcString });\n  }, [startDate, startTime]);\n\n  useEffect(() => {\n    const endDateTime = formatDate(endDate, endTime);\n    const utcString = endDateTime.toISOString();\n    setItem({ ...item, end_time: utcString });\n  }, [endDate, endTime]);\n\n  const formatDate = (datetime, time) => {\n    const hour = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    datetime.setHours(hour);\n    datetime.setMinutes(minutes);\n    datetime.setSeconds(0);\n    return datetime;\n  };\n\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n  const [isDeleteAlert, setIsDeleteAlert] = useState(false);\n  const [isDeletingAlert, setIsDeletingAlert] = useState(false);\n  const id = props.location.state.id;\n\n  useEffect(() => {\n    axios\n      .get(`${productionBackendURL}/api/v1/todos/${id}`, {\n        headers: headerData,\n      })\n      .then((resp) => {\n        setItem(resp.data.data.attributes);\n      });\n  }, []);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setItem({ ...item, [name]: value });\n  };\n\n  const handleCheckComplete = (e) => {\n    setItem({ ...item, is_completed: !item.is_completed });\n  };\n  const handleCheckPriority = (e) => {\n    setItem({ ...item, is_priority: !item.is_priority });\n  };\n\n  const handleSave = (e) => {\n    e.preventDefault();\n    axios\n      .put(\n        `${productionBackendURL}/api/v1/todos/${id}`,\n        { todo: item },\n        {\n          headers: headerData,\n        }\n      )\n      .then((resp) => {\n        setIsSuccessAlert(true);\n        setTimeout(() => setIsSuccessAlert(false), 800);\n      });\n  };\n\n  let history = useHistory();\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    setIsDeleteAlert(true);\n  };\n\n  const handleDelete = (e) => {\n    e.preventDefault();\n    setIsDeleteAlert(false);\n    setIsDeletingAlert(true);\n    axios\n      .delete(`${productionBackendURL}/api/v1/todos/${id}`, {\n        headers: headerData,\n        data: item,\n      })\n      .then((resp) => {});\n    setTimeout(() => {\n      setIsDeletingAlert(false);\n      history.push('/home');\n    }, 1000);\n  };\n\n  const handleStartEndDate = (value) => {\n    setStartDate(value);\n    setEndDate(value);\n  };\n\n  return (\n    <div className='todo-form'>\n      <SuccessAlert isSuccessAlert={isSuccessAlert} />\n      <DeletingAlert isDeletingAlert={isDeletingAlert} />\n      <DeleteAlert\n        isDeleteAlert={isDeleteAlert}\n        handleDelete={handleDelete}\n        setIsDeleteAlert={setIsDeleteAlert}\n      />\n      <form>\n        <h1>Edit</h1>\n        <div className='form-group'>\n          <label htmlFor='task' className='form-label'>\n            Task\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='task'\n            name='task'\n            value={item.task}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='description' className='form-label'>\n            Description\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='description'\n            name='description'\n            value={item.description}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='category' className='form-label'>\n            Category\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='category'\n            name='category'\n            value={item.category}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor='start-date' className='form-label'>\n            Start\n          </label>\n          <Calendar\n            onChange={(value) => {\n              handleStartEndDate(value);\n            }}\n            value={new Date(item.start_time)}\n            onClickDay={(startDate, e) => setStartDate(startDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setStartTime(e.target.value);\n            }}\n            value={formatLocalTime(item.start_time)}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor='end-date' className='form-label'>\n            End\n          </label>\n          <Calendar\n            onChange={setEndDate}\n            value={new Date(item.end_time)}\n            onClickDay={(endDate, e) => setEndDate(endDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setEndTime(e.target.value);\n            }}\n            value={formatLocalTime(item.end_time)}\n          />\n        </div>\n        <br />\n        <div onClick={handleCheckComplete}>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <div onClick={handleCheckPriority}>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary' onClick={handleSave}>\n          Save Changes\n        </button>\n        <br />\n        <Back />\n        <br />\n        <button\n          type='submit'\n          className='btn btn-dark'\n          onClick={handleDeleteClick}\n        >\n          Delete\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default TodoEdit;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js",["145","146"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\nimport checkboxTicked from '../../images/check-box.png';\nimport checkboxBlank from '../../images/blank-check-box.png';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { useHistory } from 'react-router-dom';\nimport SuccessAlert from './SuccessAlert';\nimport Back from './Back';\nimport { productionBackendURL } from '../Path';\n\nconst TodoCreate = () => {\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [item, setItem] = useState({\n    task: '',\n    description: '',\n    category: '',\n    start_time: '',\n    end_time: '',\n    is_completed: false,\n    is_priority: false,\n  });\n  const [startDate, setStartDate] = useState(new Date());\n  const [startTime, setStartTime] = useState('09:00');\n  const [endDate, setEndDate] = useState(new Date());\n  const [endTime, setEndTime] = useState('10:00');\n\n  useEffect(() => {\n    const startDateTime = formatDate(startDate, startTime);\n    const utcString = startDateTime.toISOString();\n    setItem({ ...item, start_time: utcString });\n  }, [startDate, startTime]);\n\n  useEffect(() => {\n    const endDateTime = formatDate(endDate, endTime);\n    const utcString = endDateTime.toISOString();\n    setItem({ ...item, end_time: utcString });\n  }, [endDate, endTime]);\n\n  const formatDate = (datetime, time) => {\n    const hour = time.slice(0, 2);\n    const minutes = time.slice(3, 5);\n    datetime.setHours(hour);\n    datetime.setMinutes(minutes);\n    datetime.setSeconds(0);\n    return datetime;\n  };\n\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setItem({ ...item, [name]: value });\n  };\n\n  const handleCheckComplete = (e) => {\n    setItem({ ...item, is_completed: !item.is_completed });\n  };\n\n  const handleCheckPriority = (e) => {\n    setItem({ ...item, is_priority: !item.is_priority });\n  };\n\n  const handleStartEndDate = (value) => {\n    setStartDate(value);\n    setEndDate(value);\n  };\n\n  let history = useHistory();\n  const handleSave = (e) => {\n    e.preventDefault();\n    axios\n      .post(`${productionBackendURL}/api/v1/todos`, item, {\n        headers: headerData,\n      })\n      .then((resp) => {\n        setIsSuccessAlert(true);\n      });\n    setTimeout(() => {\n      setIsSuccessAlert(false);\n      history.push('/home');\n    }, 800);\n  };\n\n  return (\n    <div className='todo-form'>\n      <SuccessAlert isSuccessAlert={isSuccessAlert} />\n      <form>\n        <h1>New Task</h1>\n        <div className='form-group'>\n          <label htmlFor='task' className='form-label'>\n            Task\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='task'\n            name='task'\n            value={item.task}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='description' className='form-label'>\n            Description\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='description'\n            name='description'\n            value={item.description}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div className='form-group'>\n          <label htmlFor='category' className='form-label'>\n            Category\n          </label>\n          <input\n            type='text'\n            className='form-control'\n            id='category'\n            name='category'\n            value={item.category}\n            onChange={handleChange}\n          ></input>\n        </div>\n        <div>\n          <label htmlFor='start-date' className='form-label'>\n            Start\n          </label>\n          <Calendar\n            onChange={(value) => {\n              handleStartEndDate(value);\n            }}\n            value={startDate}\n            onClickDay={(startDate, e) => setStartDate(startDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setStartTime(e.target.value);\n            }}\n            value={startTime}\n          />\n        </div>\n        <br />\n        <div>\n          <label htmlFor='end-date' className='form-label'>\n            End\n          </label>\n          <Calendar\n            onChange={setEndDate}\n            value={endDate}\n            onClickDay={(endDate, e) => setEndDate(endDate)}\n          />\n          <input\n            type='time'\n            onChange={(e) => {\n              setEndTime(e.target.value);\n            }}\n            value={endTime}\n          />\n        </div>\n        <br />\n        <div onClick={handleCheckComplete}>\n          <label className='checkbox-label'>Completed</label>\n          {item.is_completed ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <div onClick={handleCheckPriority}>\n          <label className='checkbox-label'>Priority</label>\n          {item.is_priority ? (\n            <img\n              className='checkbox'\n              src={checkboxTicked}\n              alt='Checkbox Ticked'\n            ></img>\n          ) : (\n            <img\n              className='checkbox'\n              src={checkboxBlank}\n              alt='Checkbox Blank'\n            ></img>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary' onClick={handleSave}>\n          Save Changes\n        </button>\n        <br />\n        <Back />\n      </form>\n    </div>\n  );\n};\n\nexport default TodoCreate;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js",["147","148"],"import React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport SearchIcon from '../svg/SearchIcon';\nimport Dropdown from './Dropdown';\nimport { searchOptions } from './SearchOptions';\n\nconst Search = ({\n  items,\n  setItemsDisplayed,\n  setIsActiveSearchCalendar,\n  selected,\n  setSelected,\n}) => {\n  const [input, setInput] = useState('');\n  const [showCard, setShowCard] = useState(false);\n\n  const handleChange = (e) => {\n    const value = e.target.value;\n    setInput(value);\n  };\n\n  function find(input) {\n    let regexInput = new RegExp(input, 'i');\n    if (selected === 'By Category') {\n      setItemsDisplayed(\n        items.filter((item) => regexInput.test(item.attributes.category))\n      );\n    } else {\n      setItemsDisplayed(\n        items.filter((item) => regexInput.test(item.attributes.task))\n      );\n    }\n  }\n\n  function reorder() {\n    if (selected === 'By Priority') {\n      const priorityItems = items.filter((item) => item.attributes.is_priority);\n      const nonPriorityItems = items.filter(\n        (item) => !item.attributes.is_priority\n      );\n      const reorderedItems = priorityItems.concat(nonPriorityItems);\n      setItemsDisplayed(reorderedItems);\n    } else if (selected === 'By Completed') {\n      const completedItems = items.filter(\n        (item) => item.attributes.is_completed\n      );\n      const nonCompletedItems = items.filter(\n        (item) => !item.attributes.is_completed\n      );\n      const reorderedItems = completedItems.concat(nonCompletedItems);\n      setItemsDisplayed(reorderedItems);\n    } else {\n      setItemsDisplayed(items);\n    }\n  }\n\n  useEffect(() => {\n    if (input) {\n      find(input);\n    } else {\n      setItemsDisplayed(items);\n    }\n  }, [input]);\n\n  useEffect(() => {\n    if (selected === 'By Start Date' || selected === 'By End Date') {\n      setIsActiveSearchCalendar(true);\n    } else {\n      reorder();\n    }\n  }, [selected]);\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    setSelected(e.target.innerHTML);\n    setShowCard(!showCard);\n  };\n\n  return (\n    <div>\n      <div className='search-bar'>\n        <input\n          id='search'\n          name='search'\n          placeholder='Search...'\n          value={input}\n          onChange={handleChange}\n        ></input>\n        <SearchIcon />\n        <Dropdown\n          handleSelect={handleSelect}\n          showCard={showCard}\n          setShowCard={setShowCard}\n          selected={selected}\n          searchOptions={searchOptions}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n",["149","150"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SuccessAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Dropdown.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchOptions.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/CheckboxTicked.js",["151","152","153","154"],"import React, { useState } from 'react';\n\nconst CheckboxTicked = ({ toggleCheckbox, id }) => {\n  const [isHover, setIsHover] = useState(false);\n  return (\n    <div\n      onClick={toggleCheckbox}\n      onMouseOver={() => setIsHover(true)}\n      onMouseOut={() => setIsHover(false)}\n    >\n      {isHover ? (\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width='81'\n          height='81'\n          viewBox='0 0 81 81'\n          id={id}\n        >\n          <g\n            id='Group_17'\n            data-name='Group 17'\n            transform='translate(-1211 -576)'\n          >\n            <g\n              id='Rectangle_9'\n              data-name='Rectangle 9'\n              transform='translate(1211 576)'\n              fill='#ceedff'\n              stroke='#0c129f'\n              strokeWidth='12'\n            >\n              <rect width='81' height='81' stroke='none' id={id} />\n              <rect x='6' y='6' width='69' height='69' fill='none' id={id} />\n            </g>\n            <line\n              id='Line_1'\n              data-name='Line 1'\n              x2='14'\n              y2='17'\n              transform='translate(1233.5 615.5)'\n              fill='none'\n              stroke='#0c129f'\n              strokeWidth='8'\n              id={id}\n            />\n            <line\n              id='Line_2'\n              data-name='Line 2'\n              x1='31'\n              y2='30'\n              transform='translate(1243.5 602.5)'\n              fill='none'\n              stroke='#0c129f'\n              strokeWidth='8'\n              id={id}\n            />\n          </g>\n        </svg>\n      ) : (\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          width='81'\n          height='81'\n          viewBox='0 0 81 81'\n          id={id}\n        >\n          <g id='Group_3' data-name='Group 3' transform='translate(-1207 -399)'>\n            <g id='Group_5' data-name='Group 5' transform='translate(-4 -177)'>\n              <g\n                id='Rectangle_9'\n                data-name='Rectangle 9'\n                transform='translate(1211 576)'\n                fill='#fff'\n                stroke='#0c129f'\n                strokeWidth='12'\n              >\n                <rect width='81' height='81' stroke='none' id={id} />\n                <rect x='6' y='6' width='69' height='69' fill='none' id={id} />\n              </g>\n              <line\n                id='Line_1'\n                data-name='Line 1'\n                x2='14'\n                y2='17'\n                transform='translate(1233.5 615.5)'\n                fill='none'\n                stroke='#0c129f'\n                strokeWidth='8'\n                id={id}\n              />\n              <line\n                id='Line_2'\n                data-name='Line 2'\n                x1='31'\n                y2='30'\n                transform='translate(1243.5 602.5)'\n                fill='none'\n                stroke='#0c129f'\n                strokeWidth='8'\n                id={id}\n              />\n            </g>\n          </g>\n        </svg>\n      )}\n    </div>\n  );\n};\n\nexport default CheckboxTicked;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/TrashInactive.js",[],["155","156"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeleteAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/DeletingAlert.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/SearchIcon.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/PriorityIcon.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Viewbar.js",["157","158","159"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Dropdown from './Dropdown';\nimport AddButton from '../svg/AddButton';\nimport DeleteAlert from './DeleteAlert';\n\nconst Viewbar = ({\n  items,\n  setItemsDisplayed,\n  setIsDeleteAlert,\n  setDeleteData,\n}) => {\n  let categoriesToAdd = [\n    'All',\n    'Priority',\n    'Completed',\n    'Incomplete',\n    'Start Date Order',\n    'End Date Order',\n  ];\n  const [viewOptions, setViewOptions] = useState(categoriesToAdd);\n  const [showCard, setShowCard] = useState(false);\n  const [selected, setSelected] = useState(viewOptions[0]);\n\n  useEffect(() => {\n    categoriesToAdd = [\n      'All',\n      'Priority',\n      'Completed',\n      'Incomplete',\n      'Start Date Order',\n      'End Date Order',\n    ];\n    for (let i = 0; i < items.length; i++) {\n      const category = items[i].attributes.category;\n      if (category && !categoriesToAdd.includes(category)) {\n        categoriesToAdd.push(category);\n      }\n    }\n    setViewOptions(categoriesToAdd);\n  }, [items]);\n\n  const handleSelect = (e) => {\n    e.preventDefault();\n    setSelected(e.target.innerHTML);\n    setShowCard(!showCard);\n  };\n\n  let deleteIds = [];\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    deleteIds = [];\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].attributes.is_completed) {\n        deleteIds.push(items[i].id);\n      }\n    }\n    setDeleteData({ id: deleteIds });\n    setIsDeleteAlert(true);\n  };\n\n  const sortStartDate = (a, b) =>\n    a.attributes.start_time < b.attributes.start_time\n      ? -1\n      : a.attributes.start_time > b.attributes.start_time\n      ? 1\n      : 0;\n  const sortEndDate = (a, b) =>\n    a.attributes.end_time < b.attributes.end_time\n      ? -1\n      : a.attributes.end_time > b.attributes.end_time\n      ? 1\n      : 0;\n\n  useEffect(() => {\n    if (selected === 'Priority') {\n      const priorityItems = items.filter((item) => item.attributes.is_priority);\n      setItemsDisplayed(priorityItems);\n    } else if (selected === 'Completed') {\n      const completedItems = items.filter(\n        (item) => item.attributes.is_completed\n      );\n      setItemsDisplayed(completedItems);\n    } else if (selected === 'Incomplete') {\n      const incompleteItems = items.filter(\n        (item) => !item.attributes.is_completed\n      );\n      setItemsDisplayed(incompleteItems);\n    } else if (selected === 'All') {\n      setItemsDisplayed(items);\n    } else if (selected === 'Start Date Order') {\n      const sorted = items.slice().sort(sortStartDate);\n      setItemsDisplayed(sorted);\n    } else if (selected === 'End Date Order') {\n      const sorted = items.slice().sort(sortEndDate);\n      setItemsDisplayed(sorted);\n    } else {\n      const displayItems = items.filter(\n        (item) => item.attributes.category === selected\n      );\n      setItemsDisplayed(displayItems);\n    }\n  }, [selected]);\n\n  return (\n    <div className='viewbar-container'>\n      <div className='viewbar'>\n        <div className='view-text'>View: </div>\n        <Dropdown\n          handleSelect={handleSelect}\n          showCard={showCard}\n          setShowCard={setShowCard}\n          selected={selected}\n          searchOptions={viewOptions}\n        />\n        <div className='todolist-icons-container'>\n          <Link to='/todo/new' className='nav-link active' aria-current='page'>\n            <AddButton />\n          </Link>\n          <button className='btn btn-info' onClick={handleDeleteClick}>\n            Delete all Completed\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Viewbar;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/ViewOptions.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/svg/AddButton.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/CalendarView.js",["160"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport '../App.css';\nimport '../svg/AddButton';\n\nconst CalendarView = ({ items }) => {\n  const [date, setDate] = useState(new Date());\n\n  const displayItemOnCalendar = (tileDate, items) => {\n    const date = tileDate.getDate();\n    const month = tileDate.getMonth();\n    const year = tileDate.getFullYear();\n\n    const itemsCopy = [...items];\n\n    const itemsFiltered = itemsCopy.filter((item) => {\n      const isoTime = item.attributes.start_time;\n      let localTime = new Date(isoTime);\n      const itemDate = localTime.getDate();\n      const itemMonth = localTime.getMonth();\n      const itemYear = localTime.getFullYear();\n      return date === itemDate && month === itemMonth && year === itemYear;\n    });\n\n    return itemsFiltered.length\n      ? itemsFiltered.map((item) => (\n          <Link\n            to={{\n              pathname: `/todo/edit/${item.attributes.id}`,\n              state: { id: item.attributes.id },\n            }}\n            key={item.attributes.id}\n          >\n            <div className='calendar-todo'>{item.attributes.task}</div>\n          </Link>\n        ))\n      : null;\n  };\n\n  return (\n    <div className='calendar-container'>\n      <Calendar\n        onChange={setDate}\n        value={date}\n        tileContent={({ date, view }) =>\n          view === 'month' ? displayItemOnCalendar(date, items) : null\n        }\n      />\n    </div>\n  );\n};\n\nexport default CalendarView;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/SearchCalendar.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/Path.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.tsx",[],["161","162"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.tsx",["163"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.tsx",[],["164","165"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.tsx",["166"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom';\nimport { productionBackendURL } from '../Path';\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    email: false,\n    password: false,\n    password_confirmation: false,\n  });\n  const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n  const [isSuccessAlert, setIsSuccessAlert] = useState(false);\n\n  //To set form input values\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  //Regex to check if email format is valid\n  let pattern = new RegExp(\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n  );\n\n  //Check if email, password and confirm password inputs are valid\n  useEffect(() => {\n    if (\n      pattern.test(user.email) &&\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ email: true, password: true, password_confirmation: true });\n    } else if (!pattern.test(user.email)) {\n      setValid({ ...valid, email: false });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, email: true, password: false });\n    } else {\n      setValid({ email: true, password: true, password_confirmation: false });\n    }\n  }, [user.email, user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleSignup = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (valid.email && valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .post(`${productionBackendURL}/api/v1/auth`, user)\n        .then((resp) => {\n          setIsSuccessAlert(true);\n          setTimeout(() => {\n            setIsSuccessAlert(false);\n            history.push('/login');\n          }, 800);\n        })\n        .catch((err) => {\n          if (err.response.status && err.response.status === 422) {\n            setUserAlreadyExists(true);\n          } else {\n            setError(true);\n          }\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <div className='user-auth'>\n      {isSuccessAlert && (\n        <div className='alert alert-success'>\n          Account Created! Redirecting to Login...\n        </div>\n      )}\n      {userAlreadyExists && (\n        <div\n          className='alert alert-info alert-dismissible fade show'\n          role='alert'\n        >\n          User already exists\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setUserAlreadyExists(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      <form onSubmit={handleSignup}>\n        <h1>Sign Up</h1>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='email' className='form-label'>\n            Email\n          </label>\n          <input\n            type='email'\n            className='form-control'\n            id='email'\n            name='email'\n            value={user.email}\n            onChange={handleChange}\n          ></input>\n          {!valid.email && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please enter a valid email\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary'>\n          Sign up\n        </button>\n        <br />\n        <Link to='/login'>Or log in if you have an account</Link>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.tsx",["167"],"import React, { useState, useEffect } from 'react';\nimport Todos from './Todos';\nimport Header from './Header';\nimport CalendarView from './CalendarView';\nimport axios from 'axios';\nimport '../App.css';\nimport { productionBackendURL } from '../Path';\n\ninterface TodoAttributes {\n  task: string;\n  description: string;\n  category: string;\n  start_time: string;\n  end_time: string;\n  is_completed: boolean;\n  is_priority: boolean;\n  slug: string;\n  user_id: number;\n  id: number;\n}\n\ninterface Todo {\n  attributes: TodoAttributes;\n  id: string;\n  [key: string]: string | object;\n}\n\nconst Home = () => {\n  const [items, setItems] = useState<undefined | Todo[]>([]);\n  const [itemsDisplayed, setItemsDisplayed] = useState<undefined | Todo[]>([]);\n  let headerData = JSON.parse(sessionStorage.userData);\n  const [isUpdate, setIsUpdate] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(`${productionBackendURL}/api/v1/todos`, {\n        headers: headerData,\n      })\n      .then((res) => {\n        const item = res.data.data;\n        setItems(item);\n        setItemsDisplayed(item);\n        console.log(item);\n      });\n  }, [isUpdate]);\n\n  return (\n    <div>\n      <Header />\n      <div className='view'>\n        <CalendarView items={items} />\n        <Todos\n          items={items}\n          itemsDisplayed={itemsDisplayed}\n          setItemsDisplayed={setItemsDisplayed}\n          isUpdate={isUpdate}\n          setIsUpdate={setIsUpdate}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n",{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"168","replacedBy":"172"},{"ruleId":"170","replacedBy":"173"},{"ruleId":"168","replacedBy":"174"},{"ruleId":"170","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":27,"column":6,"nodeType":"178","endLine":27,"endColumn":8,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":51,"column":6,"nodeType":"178","endLine":51,"endColumn":28,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"180","line":57,"column":6,"nodeType":"178","endLine":57,"endColumn":24,"suggestions":"182"},{"ruleId":"176","severity":1,"message":"177","line":81,"column":6,"nodeType":"178","endLine":81,"endColumn":8,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"180","line":33,"column":6,"nodeType":"178","endLine":33,"endColumn":28,"suggestions":"184"},{"ruleId":"176","severity":1,"message":"180","line":39,"column":6,"nodeType":"178","endLine":39,"endColumn":24,"suggestions":"185"},{"ruleId":"176","severity":1,"message":"186","line":63,"column":6,"nodeType":"178","endLine":63,"endColumn":13,"suggestions":"187"},{"ruleId":"176","severity":1,"message":"188","line":71,"column":6,"nodeType":"178","endLine":71,"endColumn":16,"suggestions":"189"},{"ruleId":"168","replacedBy":"190"},{"ruleId":"170","replacedBy":"191"},{"ruleId":"192","severity":1,"message":"193","line":44,"column":15,"nodeType":"194","endLine":44,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":55,"column":15,"nodeType":"194","endLine":55,"endColumn":22},{"ruleId":"192","severity":1,"message":"193","line":89,"column":17,"nodeType":"194","endLine":89,"endColumn":24},{"ruleId":"192","severity":1,"message":"193","line":100,"column":17,"nodeType":"194","endLine":100,"endColumn":24},{"ruleId":"168","replacedBy":"195"},{"ruleId":"170","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":5,"column":8,"nodeType":"199","messageId":"200","endLine":5,"endColumn":19},{"ruleId":"176","severity":1,"message":"201","line":26,"column":23,"nodeType":"178","endLine":33,"endColumn":6},{"ruleId":"176","severity":1,"message":"202","line":104,"column":6,"nodeType":"178","endLine":104,"endColumn":16,"suggestions":"203"},{"ruleId":"197","severity":1,"message":"204","line":1,"column":27,"nodeType":"199","messageId":"200","endLine":1,"endColumn":36},{"ruleId":"168","replacedBy":"195"},{"ruleId":"170","replacedBy":"196"},{"ruleId":"176","severity":1,"message":"205","line":66,"column":6,"nodeType":"178","endLine":66,"endColumn":49,"suggestions":"206"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"176","severity":1,"message":"207","line":50,"column":6,"nodeType":"178","endLine":50,"endColumn":61,"suggestions":"208"},{"ruleId":"176","severity":1,"message":"209","line":45,"column":6,"nodeType":"178","endLine":45,"endColumn":16,"suggestions":"210"},"no-native-reassign",["211"],"no-negated-in-lhs",["212"],["211"],["212"],["211"],["212"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'headerData' and 'id'. Either include them or remove the dependency array.","ArrayExpression",["213"],"React Hook useEffect has a missing dependency: 'item'. Either include it or remove the dependency array. You can also do a functional update 'setItem(i => ...)' if you only need 'item' in the 'setItem' call.",["214"],["215"],["216"],["217"],["218"],"React Hook useEffect has missing dependencies: 'find', 'items', and 'setItemsDisplayed'. Either include them or remove the dependency array. If 'setItemsDisplayed' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["219"],"React Hook useEffect has missing dependencies: 'reorder' and 'setIsActiveSearchCalendar'. Either include them or remove the dependency array. If 'setIsActiveSearchCalendar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],["211"],["212"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["211"],["212"],"no-unused-vars","'DeleteAlert' is defined but never used.","Identifier","unusedVar","Assignments to the 'categoriesToAdd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has missing dependencies: 'items' and 'setItemsDisplayed'. Either include them or remove the dependency array. If 'setItemsDisplayed' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["221"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'valid'. Either include it or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["222"],"React Hook useEffect has missing dependencies: 'pattern' and 'valid'. Either include them or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["223"],"React Hook useEffect has a missing dependency: 'headerData'. Either include it or remove the dependency array.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"225","fix":"231"},{"desc":"227","fix":"232"},{"desc":"229","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},"Update the dependencies array to be: [headerData, id]",{"range":"246","text":"247"},"Update the dependencies array to be: [item, startDate, startTime]",{"range":"248","text":"249"},"Update the dependencies array to be: [endDate, endTime, item]",{"range":"250","text":"251"},{"range":"252","text":"247"},{"range":"253","text":"249"},{"range":"254","text":"251"},"Update the dependencies array to be: [find, input, items, setItemsDisplayed]",{"range":"255","text":"256"},"Update the dependencies array to be: [reorder, selected, setIsActiveSearchCalendar]",{"range":"257","text":"258"},"Update the dependencies array to be: [items, selected, setItemsDisplayed]",{"range":"259","text":"260"},"Update the dependencies array to be: [user.password, user.password_confirmation, valid]",{"range":"261","text":"262"},"Update the dependencies array to be: [pattern, user.email, user.password, user.password_confirmation, valid]",{"range":"263","text":"264"},"Update the dependencies array to be: [headerData, isUpdate]",{"range":"265","text":"266"},[824,826],"[headerData, id]",[1750,1772],"[item, startDate, startTime]",[1951,1969],"[endDate, endTime, item]",[2645,2647],[1137,1159],[1338,1356],[1726,1733],"[find, input, items, setItemsDisplayed]",[1907,1917],"[reorder, selected, setIsActiveSearchCalendar]",[2911,2921],"[items, selected, setItemsDisplayed]",[2087,2130],"[user.password, user.password_confirmation, valid]",[1846,1901],"[pattern, user.email, user.password, user.password_confirmation, valid]",[1129,1139],"[headerData, isUpdate]"]