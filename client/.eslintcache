[{"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js":"1","/Users/rgs/Documents/Learning/todoapp/client/src/index.js":"2","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.js":"3","/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js":"4","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.js":"5","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.js":"6","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.js":"7","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js":"8","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.js":"9","/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.js":"10","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js":"11","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js":"12","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js":"13","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js":"14","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js":"15"},{"size":362,"mtime":1608600102011,"results":"16","hashOfConfig":"17"},{"size":558,"mtime":1608606118181,"results":"18","hashOfConfig":"17"},{"size":2239,"mtime":1608798390596,"results":"19","hashOfConfig":"17"},{"size":1086,"mtime":1608797989738,"results":"20","hashOfConfig":"17"},{"size":5809,"mtime":1608706867184,"results":"21","hashOfConfig":"17"},{"size":204,"mtime":1608798530722,"results":"22","hashOfConfig":"17"},{"size":1002,"mtime":1608800349526,"results":"23","hashOfConfig":"17"},{"size":1959,"mtime":1608795527655,"results":"24","hashOfConfig":"17"},{"size":1434,"mtime":1608724382512,"results":"25","hashOfConfig":"17"},{"size":4853,"mtime":1608726246187,"results":"26","hashOfConfig":"17"},{"size":2171,"mtime":1608800734361,"results":"27","hashOfConfig":"17"},{"size":5663,"mtime":1608800713690,"results":"28","hashOfConfig":"17"},{"size":367,"mtime":1608794719407,"results":"29","hashOfConfig":"17"},{"size":3824,"mtime":1608800726191,"results":"30","hashOfConfig":"17"},{"size":468,"mtime":1608802213398,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"t0lzz6",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rgs/Documents/Learning/todoapp/client/src/reportWebVitals.js",[],["68","69"],"/Users/rgs/Documents/Learning/todoapp/client/src/index.js",[],["70","71"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Login.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/App.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/Signup.js",["72"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory, Link } from 'react-router-dom';\n\nconst Signup = () => {\n  const [user, setUser] = useState({\n    email: '',\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    email: false,\n    password: false,\n    password_confirmation: false,\n  });\n  const [userAlreadyExists, setUserAlreadyExists] = useState(false);\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  let pattern = new RegExp(\n    /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\n  );\n\n  useEffect(() => {\n    if (\n      pattern.test(user.email) &&\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ email: true, password: true, password_confirmation: true });\n    } else if (!pattern.test(user.email)) {\n      setValid({ ...valid, email: false });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, email: true, password: false });\n    } else {\n      setValid({ email: true, password: true, password_confirmation: false });\n    }\n  }, [user.email, user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleSignup = (e) => {\n    e.preventDefault();\n    if (valid.email && valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .post('http://localhost:3000/api/v1/auth', user)\n        .then((resp) => {\n          history.push(`/login`);\n        })\n        .catch((err) => {\n          console.log(err.response);\n          if (err.response.status === 422) {\n            setUserAlreadyExists(true);\n          } else {\n            setError(true);\n          }\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <section>\n      {userAlreadyExists && (\n        <div\n          className='alert alert-info alert-dismissible fade show'\n          role='alert'\n        >\n          User already exists\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setUserAlreadyExists(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      <h1>Sign Up</h1>\n      <br />\n      <form onSubmit={handleSignup}>\n        <div className='form-group'>\n          <label htmlFor='email' className='form-label'>\n            Email\n          </label>\n          <input\n            type='email'\n            className='form-control'\n            id='email'\n            name='email'\n            value={user.email}\n            onChange={handleChange}\n          ></input>\n          {!valid.email && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please enter a valid email\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <br />\n        <button type='submit' className='btn btn-primary'>\n          Sign up\n        </button>\n      </form>\n      <br />\n      <Link to='/login'>Or log in if you have an account</Link>\n    </section>\n  );\n};\n\nexport default Signup;\n",["73","74"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Home.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todos.js",["75"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Header.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ForgotPassword.js",[],["76","77"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/users/ResetPassword.js",["78"],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nconst ResetPassword = () => {\n  const [user, setUser] = useState({\n    password: '',\n    password_confirmation: '',\n  });\n\n  const [valid, setValid] = useState({\n    password: false,\n    password_confirmation: false,\n  });\n  const [error, setError] = useState(false);\n  const [submitError, setSubmitError] = useState(false);\n  const [headerData, setHeaderData] = useState({});\n  const handleChange = (e) => {\n    const name = e.target.name;\n    const value = e.target.value;\n    setUser({ ...user, [name]: value });\n  };\n\n  useEffect(() => {\n    const url = window.location.href;\n    const queryStringIndex = url.indexOf('?');\n    const queryString = url.substring(queryStringIndex + 1);\n    const queryStringParts = queryString.split('&');\n    var parameters = {};\n    queryStringParts.forEach((part) => {\n      var equalsIndex = part.indexOf('=');\n      var key, value;\n      key = part.substring(0, equalsIndex);\n      value = part.substring(equalsIndex + 1);\n      key = decodeURIComponent(key);\n      value = decodeURIComponent(value);\n      parameters[key] = value;\n    });\n    setHeaderData({\n      'access-token': parameters['access-token'],\n      client: parameters.client,\n      uid: parameters.uid,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      user.password.length >= 12 &&\n      user.password === user.password_confirmation\n    ) {\n      setValid({ password: true, password_confirmation: true });\n    } else if (user.password.length < 12) {\n      setValid({ ...valid, email: true, password: false });\n    } else {\n      setValid({ email: true, password: true, password_confirmation: false });\n    }\n  }, [user.email, user.password, user.password_confirmation]);\n\n  let history = useHistory();\n\n  axios.defaults.xsrfCookieName = 'CSRF-TOKEN';\n  axios.defaults.xsrfHeaderName = 'X-CSRF-Token';\n\n  const handleReset = (e) => {\n    e.preventDefault();\n    if (valid.password && valid.password_confirmation) {\n      setSubmitError(false);\n      axios\n        .put('http://localhost:3000/api/v1/auth/password', null, {\n          params: user,\n          headers: headerData,\n        })\n        .then((resp) => {\n          history.push(`/login`);\n        })\n        .catch((err) => {\n          console.log(err.response);\n          setError(true);\n        });\n    } else {\n      setSubmitError(true);\n    }\n  };\n\n  return (\n    <div>\n      {submitError && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          Please ensure all fields are filled in correctly before signing up\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setSubmitError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      {error && (\n        <div\n          className='alert alert-danger alert-dismissible fade show'\n          role='alert'\n        >\n          There is an error, please try again later.\n          <button\n            type='button'\n            className='close'\n            aria-label='Close'\n            onClick={() => setError(false)}\n          >\n            <span aria-hidden='true'>&times;</span>\n          </button>\n        </div>\n      )}\n      <h1>Reset Password</h1>\n      <form onSubmit={handleReset}>\n        <div className='form-group'>\n          <label htmlFor='password' className='form-label'>\n            Password\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password'\n            name='password'\n            value={user.password}\n            onChange={handleChange}\n          ></input>\n          {!valid.password && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Your password should be at least 12 characters\n            </small>\n          )}\n        </div>\n        <br />\n        <div className='form-group'>\n          <label htmlFor='password_confirmation' className='form-label'>\n            Password Confirmation\n          </label>\n          <input\n            type='password'\n            className='form-control'\n            id='password_confirmation'\n            name='password_confirmation'\n            value={user.password_confirmation}\n            onChange={handleChange}\n          ></input>\n          {!valid.password_confirmation && (\n            <small id='passwordHelp' className='form-text text-muted'>\n              Please ensure your passwords match\n            </small>\n          )}\n        </div>\n        <button type='submit' className='btn btn-primary'>\n          Confirm\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n","/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Todo.js",["79"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoEdit.js",["80"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Back.js",[],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/TodoCreate.js",["81"],"/Users/rgs/Documents/Learning/todoapp/client/src/components/todos/Search.js",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":45,"column":6,"nodeType":"90","endLine":45,"endColumn":61,"suggestions":"91"},{"ruleId":"82","replacedBy":"92"},{"ruleId":"84","replacedBy":"93"},{"ruleId":"88","severity":1,"message":"94","line":22,"column":6,"nodeType":"90","endLine":22,"endColumn":8,"suggestions":"95"},{"ruleId":"82","replacedBy":"96"},{"ruleId":"84","replacedBy":"97"},{"ruleId":"88","severity":1,"message":"98","line":57,"column":6,"nodeType":"90","endLine":57,"endColumn":61,"suggestions":"99"},{"ruleId":"88","severity":1,"message":"100","line":24,"column":6,"nodeType":"90","endLine":24,"endColumn":8,"suggestions":"101"},{"ruleId":"88","severity":1,"message":"100","line":37,"column":6,"nodeType":"90","endLine":37,"endColumn":8,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":27,"nodeType":"105","messageId":"106","endLine":1,"endColumn":36},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pattern' and 'valid'. Either include them or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.","ArrayExpression",["109"],["107"],["108"],"React Hook useEffect has a missing dependency: 'headerData'. Either include it or remove the dependency array.",["110"],["107"],["108"],"React Hook useEffect has a missing dependency: 'valid'. Either include it or remove the dependency array. You can also do a functional update 'setValid(v => ...)' if you only need 'valid' in the 'setValid' call.",["111"],"React Hook useEffect has missing dependencies: 'headerData' and 'slug'. Either include them or remove the dependency array.",["112"],["113"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"120","fix":"122"},"Update the dependencies array to be: [pattern, user.email, user.password, user.password_confirmation, valid]",{"range":"123","text":"124"},"Update the dependencies array to be: [headerData]",{"range":"125","text":"126"},"Update the dependencies array to be: [user.email, user.password, user.password_confirmation, valid]",{"range":"127","text":"128"},"Update the dependencies array to be: [headerData, slug]",{"range":"129","text":"130"},{"range":"131","text":"130"},[1558,1613],"[pattern, user.email, user.password, user.password_confirmation, valid]",[549,551],"[headerData]",[1752,1807],"[user.email, user.password, user.password_confirmation, valid]",[749,751],"[headerData, slug]",[1134,1136]]